name: Azure SQL Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'db/**'  # Trigger only when SQL files change
  pull_request:
    branches: [ main ]
    paths:
      - 'db/**'
  workflow_dispatch:  # Allow manual trigger

env:
  AZURE_SQL_SERVER: demo-sql-srvr-01.database.windows.net
  AZURE_SQL_DATABASE: demosqldb01
  AZURE_SQL_USERNAME: ${{ secrets.AZURE_SQL_USERNAME }}
  AZURE_SQL_PASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up SQL Package
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install mssql-tools unixodbc-dev
        
    - name: Build SQL Project
      run: |
        # Combine all SQL files into a single deployment script
        cat db/*.sql > combined_script.sql
        
    - name: Run Tests
      run: |
        # Optional: Add your SQL testing commands here
        # Example using tSQLt or other testing frameworks
        echo "Running SQL tests..."
        
    - name: Deploy to Azure SQL Database
      run: |
        /opt/mssql-tools/bin/sqlcmd \
          -S $AZURE_SQL_SERVER \
          -d $AZURE_SQL_DATABASE \
          -U $AZURE_SQL_USERNAME \
          -P $AZURE_SQL_PASSWORD \
          -i combined_script.sql \
          -o deployment_log.txt
          
    - name: Upload Deployment Logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: deployment-logs
        path: deployment_log.txt

    - name: Check for Errors
      run: |
        if grep -i "error" deployment_log.txt; then
          echo "Deployment contained errors"
          exit 1
        fi
